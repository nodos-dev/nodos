# Copyright MediaZ Teknoloji A.S. All Rights Reserved.
macro(nos_find_sdk requested_version out_nos_plugin_sdk out_nos_subsystem_sdk out_sdk_dir)
	# Search for that specific version. If not found, warn the user about using the latest compatible version.
	list(FIND NOS_VERSIONS ${requested_version} found_version_idx)

	if(found_version_idx EQUAL -1)
		message(WARNING "Nodos version ${requested_version} not found. Using the latest compatible version.")
		set(max_compatible_minor -1)
		
		string(REPLACE "." ";" req_ver_components ${requested_version})
		list(GET req_ver_components 0 req_major)
		list(GET req_ver_components 1 req_minor)

		foreach(index RANGE 1 ${NOS_SDK_END_RANGE})
			list(GET NOS_VERSIONS ${index} found_version)
			string(REPLACE "." ";" nos_version_components ${found_version})
			list(GET nos_version_components 0 major)
			list(GET nos_version_components 1 minor)

			if(major EQUAL req_major)
				if(minor GREATER max_compatible_minor)
					set(max_compatible_minor ${NOS_MINOR})
					set(found_version_idx ${index})
				endif()
			endif()
		endforeach()

		if(found_version_idx EQUAL -1)
			message(FATAL_ERROR "No compatible version found.")
		else()
			list(GET NOS_VERSIONS ${found_version_idx} found_version)
			list(GET NOS_SDK_DIRS ${found_version_idx} nos_sdk_dir)
			set(${out_sdk_dir} ${nos_sdk_dir})
			string(REPLACE "." "_" version_target_suffix ${found_version})
			set(${out_nos_plugin_sdk} nosPluginSDK_${version_target_suffix})
			set(${out_nos_subsystem_sdk} nosSubsystemSDK_${version_target_suffix})
		endif()
	endif()

	list(GET NOS_VERSIONS ${found_version_idx} found_version)
	list(GET NOS_SDK_DIRS ${found_version_idx} nos_sdk_dir)
	message(STATUS "Using Nodos version ${found_version}")
	set(${out_sdk_dir} ${nos_sdk_dir})
	string(REPLACE "." "_" version_target_suffix ${found_version})
	set(${out_nos_plugin_sdk} nosPluginSDK_${version_target_suffix})
	set(${out_nos_subsystem_sdk} nosSubsystemSDK_${version_target_suffix})
endmacro()